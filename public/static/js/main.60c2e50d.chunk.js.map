{"version":3,"sources":["redux/types/types.js","redux/reducers/uiReducer.js","redux/reducers/calendarReducer.js","redux/reducers/authReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","redux/actions/events.js","redux/actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","redux/actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","components/ui/LoadingScreen/LoadingScreen.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","isModalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","middleware","thunk","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","useForm","useState","values","setValues","reset","newState","handleInputChange","target","name","value","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdate","eventDelete","eventsLoaded","checkingComplete","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","rName","rEmail","rPassword","rPasswordConfirm","formRegisterValues","handleRegisterInputChange","lEmail","lPassword","formLoginValues","handleLoginInputChange","className","onSubmit","e","email","password","preventDefault","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOneHour","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","isTitleValid","setIsTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","contentLabel","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","format","minDate","cls","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","LoadingScreen","ReactDOM","createPortal","document","getElementById","AppRouter","exact","path","CalendarApp","render"],"mappings":"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","file":"static/js/main.60c2e50d.chunk.js","sourcesContent":["export const types = {\r\n  uiOpenModal: '[ui] open modal',\r\n  uiCloseModal: '[ui] close modal',\r\n\r\n  eventAddNew: '[event] add new',\r\n  eventStartAddNew: '[event] start add new',\r\n  eventSetActive: '[event] set active',\r\n  eventLogout: '[event] logout',\r\n  eventClearActiveEvent: '[event] clear active event',\r\n  eventUpdate: '[event] event update',\r\n  eventDelete: '[event] event delete',\r\n  eventsLoaded: '[event] events loaded',\r\n\r\n  authCheckingComplete: '[auth] checking login state completed',\r\n  authStartLogin: '[auth] start login',\r\n  authLogin: '[auth] login',\r\n  authStartRegister: '[auth] start register',\r\n  authStartTokenRefresh: '[auth] start token refresh',\r\n  authLogout: '[auth] logout'\r\n};\r\n","import { types } from './../types/types';\r\n\r\nconst initialState = {\r\n  isModalOpen: false\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return { ...state, isModalOpen: true };\r\n    case types.uiCloseModal:\r\n      return { ...state, isModalOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from './../types/types';\r\n\r\n// event object structure:\r\n// {\r\n//   id: new Date().getTime(),\r\n//   title: 'Cumpleanos del jefe',\r\n//   start: moment().toDate(),\r\n//   end: moment().add(2, 'hours').toDate(),\r\n//   notes: 'Comprar el pastel',\r\n//   user: {\r\n//     _id: '123',\r\n//     name: 'George'\r\n//   }\r\n// }\r\n\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload]\r\n      };\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload\r\n      };\r\n    case types.eventClearActiveEvent:\r\n      return {\r\n        ...state,\r\n        activeEvent: null\r\n      };\r\n    case types.eventUpdate:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((event) =>\r\n          event.id === action.payload.id ? action.payload : event\r\n        )\r\n      };\r\n    case types.eventDelete:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(\r\n          (event) => event.id !== state.activeEvent.id\r\n        ),\r\n        activeEvent: null\r\n      };\r\n\r\n    case types.eventsLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload]\r\n      };\r\n\r\n    case types.eventLogout:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from './../types/types';\r\n\r\nconst initialState = {\r\n  checking: true\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false\r\n      };\r\n    case types.authCheckingComplete:\r\n      return {\r\n        ...state,\r\n        checking: false\r\n      };\r\n    case types.authLogout:\r\n      return {\r\n        checking: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from './../reducers/rootReducer';\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : (f) => f\r\n  )\r\n);\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = (newState = initialState) => {\r\n    setValues(newState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n\r\n  if (method === 'GET') {\r\n    return fetch(url);\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n};\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n  const token = localStorage.getItem('token') || '';\r\n\r\n  if (method === 'GET') {\r\n    return fetch(url, {\r\n      method,\r\n      headers: { 'x-token': token }\r\n    });\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'x-token': token\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n};\r\n\r\nexport { fetchWithoutToken, fetchWithToken };\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n  return events.map((event) => ({\r\n    ...event,\r\n    end: moment(event.end).toDate(),\r\n    start: moment(event.start).toDate()\r\n  }));\r\n};\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { types } from './../types/types';\r\nimport { fetchWithToken } from '../../helpers/fetch';\r\nimport { prepareEvents } from './../../helpers/prepareEvents';\r\n\r\nexport const eventStartAddNew = (event) => async (dispatch, getState) => {\r\n  try {\r\n    const { uid, name } = getState().auth;\r\n\r\n    const response = await fetchWithToken('events', event, 'POST');\r\n    const body = await response.json();\r\n\r\n    if (body.ok) {\r\n      event.id = body.event.id;\r\n      event.user = {\r\n        _id: uid,\r\n        name\r\n      };\r\n      dispatch(eventAddNew(event));\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n  type: types.eventAddNew,\r\n  payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n  type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event) => async (dispatch) => {\r\n  try {\r\n    const response = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n    const body = await response.json();\r\n\r\n    if (body.ok) {\r\n      dispatch(eventUpdate(event));\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const eventUpdate = (event) => ({\r\n  type: types.eventUpdate,\r\n  payload: event\r\n});\r\n\r\nexport const startEventDelete = () => async (dispatch, getState) => {\r\n  try {\r\n    const { id } = getState().calendar.activeEvent;\r\n    const response = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n    const body = await response.json();\r\n\r\n    if (body.ok) {\r\n      dispatch(eventDelete());\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst eventDelete = () => ({\r\n  type: types.eventDelete\r\n});\r\n\r\nexport const eventsStartLoading = () => async (dispatch) => {\r\n  try {\r\n    const response = await fetchWithToken('events');\r\n    const body = await response.json();\r\n    const events = prepareEvents(body.events);\r\n\r\n    dispatch(eventsLoaded(events));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst eventsLoaded = (events) => ({\r\n  type: types.eventsLoaded,\r\n  payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n  type: types.eventLogout\r\n});\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { fetchWithoutToken, fetchWithToken } from '../../helpers/fetch';\r\nimport { types } from './../types/types';\r\nimport { eventLogout } from './events';\r\n\r\nexport const startLogin = (email, password) => async (dispatch) => {\r\n  const response = await fetchWithoutToken('auth', { email, password }, 'POST');\r\n  const body = await response.json();\r\n\r\n  if (body.ok) {\r\n    localStorage.setItem('token', body.token);\r\n    localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n    dispatch(\r\n      login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      })\r\n    );\r\n  } else {\r\n    Swal.fire('Error', body.msg, 'error');\r\n  }\r\n};\r\n\r\nexport const startRegister = (email, password, name) => async (dispatch) => {\r\n  const response = await fetchWithoutToken(\r\n    'auth/register',\r\n    { email, password, name },\r\n    'POST'\r\n  );\r\n  const body = await response.json();\r\n\r\n  if (body.ok) {\r\n    localStorage.setItem('token', body.token);\r\n    localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n    dispatch(\r\n      login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      })\r\n    );\r\n  } else {\r\n    Swal.fire('Error', body.msg, 'error');\r\n  }\r\n};\r\n\r\nexport const startChecking = () => async (dispatch) => {\r\n  const response = await fetchWithToken('auth/refresh-token');\r\n  const body = await response.json();\r\n\r\n  if (body.ok) {\r\n    localStorage.setItem('token', body.token);\r\n    localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n    dispatch(\r\n      login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      })\r\n    );\r\n  } else {\r\n    dispatch(checkingComplete());\r\n  }\r\n};\r\n\r\nconst checkingComplete = () => ({ type: types.authCheckingComplete });\r\n\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user\r\n});\r\n\r\nexport const startLogout = () => (dispatch) => {\r\n  localStorage.clear();\r\n  dispatch(eventLogout());\r\n  dispatch(logout());\r\n};\r\n\r\nconst logout = () => ({\r\n  type: types.authLogout\r\n});\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport './login.css';\r\n\r\nimport { useForm } from './../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from './../../redux/actions/auth';\r\n\r\nfunction LoginScreen() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: 'mutihan',\r\n    rEmail: 'mutihan@gmail.com',\r\n    rPassword: 'mutihan123',\r\n    rPasswordConfirm: 'mutihan123'\r\n  });\r\n\r\n  const { rName, rEmail, rPassword, rPasswordConfirm } = formRegisterValues;\r\n\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    lEmail: 'mudon@gmail.com',\r\n    lPassword: 'mudon123'\r\n  });\r\n\r\n  const { lEmail, lPassword } = formLoginValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(startLogin(lEmail, lPassword));\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (rPassword !== rPasswordConfirm) {\r\n      return Swal.fire('Error', 'The passwords must match', 'error');\r\n    }\r\n\r\n    dispatch(startRegister(rEmail, rPassword, rName));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Login</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"lEmail\"\r\n                className=\"form-control\"\r\n                placeholder=\"Email\"\r\n                value={lEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"lPassword\"\r\n                className=\"form-control\"\r\n                placeholder=\"Password\"\r\n                value={lPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Register</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name=\"rName\"\r\n                value={rName}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"rEmail\"\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"rPassword\"\r\n                value={rPassword}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name=\"rPasswordConfirm\"\r\n                value={rPasswordConfirm}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../redux/actions/auth';\r\n\r\nfunction Navbar() {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">{name}</span>\r\n\r\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n        <i className=\"fas fa-sign-out-alt\"></i>\r\n        <span className=\"ml-1\">Salir</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","export const messages = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: (total) => `+ Ver más (${total})`\r\n};\r\n","import React from 'react';\r\n\r\nfunction CalendarEvent({ event }) {\r\n  const { title, user } = event;\r\n\r\n  return (\r\n    <div>\r\n      <strong>{title}</strong>\r\n      <span> - </span>\r\n      <span>{user.name}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarEvent;\r\n","import { types } from './../types/types';\r\n\r\nexport const uiOpenModal = () => ({\r\n  type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n  type: types.uiCloseModal\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport cls from 'classnames';\r\n\r\nimport './modal.css';\r\nimport { uiCloseModal } from '../../redux/actions/ui';\r\nimport {\r\n  eventClearActiveEvent,\r\n  eventStartAddNew,\r\n  eventStartUpdate\r\n} from './../../redux/actions/events';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hour');\r\nconst nowPlusOneHour = now.clone().add(1, 'hour');\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlusOneHour.toDate()\r\n};\r\n\r\nfunction CalendarModal() {\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowPlusOneHour.toDate());\r\n  const [isTitleValid, setIsTitleValid] = useState(true);\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  const { title, notes, start, end } = formValues;\r\n\r\n  const { isModalOpen } = useSelector((state) => state.ui);\r\n  const { activeEvent } = useSelector((state) => state.calendar);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n      setFormValues(activeEvent);\r\n    } else {\r\n      setFormValues(initEvent);\r\n    }\r\n  }, [activeEvent]);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActiveEvent());\r\n    setFormValues(initEvent);\r\n  };\r\n\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e\r\n    });\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      return Swal.fire(\r\n        'Error',\r\n        'La fecha fin debe de ser mayor a fecha de inicio',\r\n        'error'\r\n      );\r\n    }\r\n\r\n    if (title.trim().length < 2) {\r\n      return setIsTitleValid(false);\r\n    }\r\n\r\n    if (activeEvent) {\r\n      dispatch(eventStartUpdate(formValues));\r\n    } else {\r\n      dispatch(eventStartAddNew(formValues));\r\n    }\r\n\r\n    setIsTitleValid(true);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isModalOpen}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      contentLabel=\"Example Modal\"\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-overlay\"\r\n    >\r\n      <h1>{activeEvent ? 'Editar evento' : 'Nuevo evento'}</h1>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={handleSubmitForm}>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={dateStart}\r\n            className=\"form-control\"\r\n            format=\"dd-MM-yyyy h:mm:ss a\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={dateEnd}\r\n            minDate={dateStart}\r\n            className=\"form-control\"\r\n            format=\"dd-MM-yyyy h:mm:ss a\"\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={cls('form-control', !isTitleValid && 'is-invalid')}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Una descripción corta\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Información adicional\r\n          </small>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CalendarModal;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { uiOpenModal } from './../../redux/actions/ui';\r\n\r\nfunction AddNewFab() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddNew = () => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n\r\n  return (\r\n    <button className=\"btn btn-primary fab\" onClick={handleAddNew}>\r\n      <i className=\"fas fa-plus\" />\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default AddNewFab;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { startEventDelete } from '../../redux/actions/events';\r\n\r\nfunction DeleteEventFab() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = () => {\r\n    dispatch(startEventDelete());\r\n  };\r\n\r\n  return (\r\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n      <i className=\"fas fa-trash\" />\r\n      <span>Borra Evento</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default DeleteEventFab;\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\n\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport Navbar from './../ui/Navbar';\r\nimport { messages } from './../../helpers/calendar-messages-es';\r\nimport CalendarEvent from './CalendarEvent';\r\nimport CalendarModal from './CalendarModal';\r\nimport { uiOpenModal } from './../../redux/actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  eventSetActive,\r\n  eventClearActiveEvent,\r\n  eventsStartLoading\r\n} from './../../redux/actions/events';\r\nimport AddNewFab from '../ui/AddNewFab';\r\nimport DeleteEventFab from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nfunction CalendarScreen() {\r\n  const dispatch = useDispatch();\r\n  const { events, activeEvent } = useSelector((state) => state.calendar);\r\n  const { uid } = useSelector((state) => state.auth);\r\n\r\n  const [lastView, setLastView] = useState(\r\n    localStorage.getItem('lastView') || 'month'\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(eventsStartLoading());\r\n  }, [dispatch]);\r\n\r\n  const onDoubleClick = (e) => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n\r\n  const onSelectEvent = (e) => {\r\n    dispatch(eventSetActive(e));\r\n  };\r\n\r\n  const onViewChange = (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem('lastView', e);\r\n  };\r\n\r\n  const onSelectSlot = (e) => {\r\n    dispatch(eventClearActiveEvent());\r\n  };\r\n\r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n    const style = {\r\n      backgroundColor: uid === event.user._id ? '#367cf7' : '#465660',\r\n      borderRadius: '0px',\r\n      opacity: 0.8,\r\n      display: 'block',\r\n      color: 'white'\r\n    };\r\n\r\n    return {\r\n      style\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={messages}\r\n        eventPropGetter={eventStyleGetter}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectEvent={onSelectEvent}\r\n        onView={onViewChange}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n        view={lastView}\r\n        components={{\r\n          event: CalendarEvent\r\n        }}\r\n      />\r\n\r\n      {!!activeEvent && <DeleteEventFab />}\r\n\r\n      <AddNewFab />\r\n\r\n      <CalendarModal />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarScreen;\r\n","import { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PublicRoute({ isAuthenticated, component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PrivateRoute({ isAuthenticated, component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './LoadingScreen.scss';\r\n\r\nfunction LoadingScreen() {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"loading-screen\">\r\n      <div className=\"loader\" />\r\n    </div>,\r\n    document.getElementById('portal')\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Switch, BrowserRouter as Router, Redirect } from 'react-router-dom';\r\n\r\nimport LoginScreen from './../components/auth/LoginScreen';\r\nimport CalendarScreen from './../components/calendar/CalendarScreen';\r\nimport { startChecking } from './../redux/actions/auth';\r\nimport PublicRoute from './PublicRoute';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport LoadingScreen from '../components/ui/LoadingScreen/LoadingScreen';\r\n\r\nfunction AppRouter() {\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);\r\n\r\n  if (checking) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            path=\"/login\"\r\n            component={LoginScreen}\r\n            isAuthenticated={!!uid}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={CalendarScreen}\r\n            isAuthenticated={!!uid}\r\n          />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './redux/store/store';\r\nimport AppRouter from './router/AppRouter';\r\n\r\nfunction CalendarApp() {\r\n  return (\r\n    <div>\r\n      <Provider store={store}>\r\n        <AppRouter />\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles.css';\n\nimport CalendarApp from './CalendarApp';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}